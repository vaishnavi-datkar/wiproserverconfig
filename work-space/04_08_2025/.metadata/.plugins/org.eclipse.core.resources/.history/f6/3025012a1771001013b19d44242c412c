package com.wipro.orderms.controller;

import com.wipro.orderms.dto.PaymentDTO;
import com.wipro.orderms.entity.Order;
import com.wipro.orderms.repo.OrderRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;

import java.time.LocalDateTime;
import java.util.List;

@RestController
@RequestMapping("/order")
public class OrderController {

    @Autowired
    private OrderRepo orderRepo;

    private RestTemplate restTemplate = new RestTemplate();

    /**
     * Create a new order and trigger payment process
     */
    @PostMapping
    public ResponseEntity<String> createOrder(@RequestBody Order order) {
        // Step 1: Set initial status to "Initiated"
        order.setOrderStatus("I");
        orderRepo.save(order);

        // Step 2: Prepare Payment DTO to send to Payment MS
        String paymentUrl = "http://localhost:9011/payment";

        PaymentDTO paymentRequest = new PaymentDTO();
        paymentRequest.setOrderId(order.getOrderId());
        paymentRequest.setAmount(order.getOrderValue());
        paymentRequest.setPaymentMode("CARD");
        paymentRequest.setDescription("Payment for order " + order.getOrderNumber());
        paymentRequest.setPaymentStatus(false);

        try {
            // Step 3: Call Payment MS
            ResponseEntity<PaymentDTO> paymentResponse =
                    restTemplate.postForEntity(paymentUrl, paymentRequest, PaymentDTO.class);

            // Step 4: Update order status based on Payment MS response
            if (paymentResponse.getStatusCode() == HttpStatus.OK &&
                paymentResponse.getBody() != null &&
                paymentResponse.getBody().isPaymentStatus()) {
                order.setOrderStatus("P"); // Paid
            } else {
                order.setOrderStatus("C"); // Cancelled
            }
        } catch (Exception e) {
            // If payment MS call fails, mark as cancelled
            order.setOrderStatus("C");
        }

        // Save updated status
        orderRepo.save(order);

        // Step 5: Send response
        return ResponseEntity.status(HttpStatus.CREATED)
                .header("created-at", LocalDateTime.now().toString())
                .body("Order Created. Status: " + order.getOrderStatus());
    }

    /**
     * Get all orders
     */
    @GetMapping
    public List<Order> getAllOrders() {
        return orderRepo.findAll();
    }
}
