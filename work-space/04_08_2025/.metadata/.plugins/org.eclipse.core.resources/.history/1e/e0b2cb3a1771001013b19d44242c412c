package com.wipro.orderms.service.impl;

import com.wipro.orderms.entity.Order; 
import com.wipro.orderms.dto.PaymentDTO;
import com.wipro.orderms.repo.OrderRepo;
import com.wipro.orderms.service.OrderService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.*;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
public class OrderServiceImpl implements OrderService {

    @Autowired
    private OrderRepo orderRepo;

    @Override
    public void save(Order order) {
        // 1️⃣ Set status to "I" (Initiated) and save
        order.setOrderStatus("I");
        orderRepo.save(order);

        // 2️⃣ Call Payment MS
        RestTemplate rest = new RestTemplate();
        String url = "http://localhost:9011/payment"; // ✅ Payment MS port

        // Payment request object
        Payment paymentReq = new Payment(order.getId(), false);

        try {
            ResponseEntity<Payment> paymentResp =
                    rest.postForEntity(url, paymentReq, Payment.class);

            // 3️⃣ Check response & update order status
            if (paymentResp.getStatusCode() == HttpStatus.OK &&
                paymentResp.getBody() != null &&
                paymentResp.getBody().isPaymentStatus()) {
                order.setOrderStatus("P"); // Paid
            } else {
                order.setOrderStatus("C"); // Cancelled
            }
        } catch (Exception e) {
            // Exception also means cancelled
            order.setOrderStatus("C");
        }

        // 4️⃣ Save updated order status
        orderRepo.save(order);
    }
}
